// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  EDITOR
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  email           String     @unique
  firstName       String
  lastName        String
  phone           String?
  image           String?
  status          UserStatus @default(ACTIVE)
  role            UserRole   @default(USER)
  isEmailVerified DateTime?
  address         Address?
  password        String // Add this field for storing the hashed password

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
}

// Address is an embedded document
type Address {
  street String
  city   String
  state  String
  zip    String
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
